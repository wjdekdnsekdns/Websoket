package com.example.demo.model;

import java.util.HashSet;
import java.util.Set;
import java.util.UUID;

import org.springframework.web.socket.TextMessage;
import org.springframework.web.socket.WebSocketSession;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.parfait.study.simplewebsocket.chatroom.nostomp.utils.MessageSendUtils;
import lombok.Getter;
import lombok.NonNull;

@Getter
public class ChatRoom {
	 private String id;
	    private String name;
	    private Set<WebSocketSession> sessions = new HashSet<>();

	    public void handleMessage(WebSocketSession session, ChatMessage chatMessage, ObjectMapper objectMapper) {

	        if (chatMessage.getType() == MessageType.JOIN) {
	            join(session);
	            chatMessage.setMessage(chatMessage.getWriter() + "님이 입장했습니다.");
	        }
	        
	        send(chatMessage, objectMapper);
	    }

	    private void join(WebSocketSession session) {
	        sessions.add(session);
	    }

	    private <T> void send(T messageObject, ObjectMapper objectMapper) {
	        try {
	            TextMessage message = new TextMessage(objectMapper.writeValueAsString(messageObject));
	            sessions.parallelStream().forEach(session -> {
	                try {
	                    session.sendMessage(message);
	                } catch (Exception e) {
	                    e.printStackTrace(); // 예외 처리 추가
	                }
	            });
	        } catch (Exception e) {
	            e.printStackTrace(); // 예외 처리 추가
	        }
	    }
    
    // 채팅방 생성
    public static ChatRoom create(@NonNull String name) {
        ChatRoom created = new ChatRoom();
        created.id = UUID.randomUUID().toString();
        created.name = name;
        return created;
    }
}